{
  "name": "Next.js Template with shadcn/ui",
  "description": "A modern Next.js template using shadcn/ui components and Tailwind CSS",
  "techStack": {
    "framework": "Next.js 15.3.3",
    "ui": {
      "components": "shadcn/ui (Gray style)",
      "styling": "Tailwind CSS v4.1.8",
      "icons": "lucide-react"
    },
    "language": "TypeScript",
    "utilities": ["class-variance-authority", "clsx", "tailwind-merge", "tailwindcss-animate"],
    "codeQuality": ["Prettier", "ESLint", "Husky", "lint-staged"]
  },
  "rules": {
    "components": {
      "location": "src/components",
      "ui": "src/components/ui",
      "naming": "PascalCase",
      "imports": "Use @/components alias",
      "shadcn": {
        "installation": "Use shadcn-ui CLI: npx shadcn-ui@latest add [component-name]",
        "usage": "Always prefer shadcn/ui components over custom ones",
        "customization": "Use the components.json configuration for theming",
        "available": [
          "accordion",
          "alert",
          "alert-dialog",
          "aspect-ratio",
          "avatar",
          "badge",
          "button",
          "calendar",
          "card",
          "checkbox",
          "collapsible",
          "command",
          "context-menu",
          "dialog",
          "dropdown-menu",
          "form",
          "hover-card",
          "input",
          "label",
          "menubar",
          "navigation-menu",
          "popover",
          "progress",
          "radio-group",
          "scroll-area",
          "select",
          "separator",
          "sheet",
          "skeleton",
          "slider",
          "switch",
          "table",
          "tabs",
          "textarea",
          "toast",
          "toggle",
          "tooltip"
        ]
      },
      "patterns": {
        "cards": {
          "description": "Card component patterns",
          "rules": [
            "Use rounded-xl shadow-xl for elevated cards",
            "Add ring-1 ring-gray-400/10 for subtle borders",
            "Include overflow-hidden when using images"
          ]
        },
        "buttons": {
          "description": "Button patterns",
          "rules": [
            "Use size='lg' className='min-w-[200px] text-base' for main CTA buttons",
            "Include ArrowRight icon for primary action buttons",
            "Use variant='outline' for secondary actions"
          ]
        },
        "badges": {
          "description": "Badge patterns",
          "rules": [
            "Use variant='secondary' className='rounded-full px-4 py-1.5' for pill badges",
            "Combine primary and muted-foreground colors for emphasis"
          ]
        },
        "forms": {
          "description": "Form component patterns",
          "rules": [
            "Use FormField with FormItem, FormLabel, FormControl structure",
            "Include FormMessage for validation feedback",
            "Add relative positioning for input icons/buttons"
          ]
        }
      }
    },
    "styling": {
      "framework": "Tailwind CSS",
      "theme": "Custom OKLCH color scheme",
      "darkMode": "class-based",
      "customization": "Use CSS variables in globals.css",
      "layout": {
        "spacing": {
          "section": {
            "description": "Standard section spacing",
            "rules": [
              "Use py-24 sm:py-32 for section vertical padding",
              "Use mx-auto max-w-7xl px-6 lg:px-8 for section horizontal containment"
            ]
          },
          "content": {
            "description": "Content spacing within sections",
            "rules": [
              "Use gap-y-16 sm:gap-y-20 for large vertical gaps",
              "Use space-y-4 for stacked elements",
              "Use gap-x-3 for horizontal inline elements"
            ]
          }
        },
        "grid": {
          "description": "Grid layout patterns",
          "rules": [
            "Use grid grid-cols-1 lg:grid-cols-2 for two-column layouts",
            "Add lg:items-center for vertically centered grid items",
            "Use lg:order-last/lg:order-first for responsive column ordering"
          ]
        }
      },
      "typography": {
        "headings": {
          "description": "Heading styles",
          "rules": [
            "Use text-3xl font-bold tracking-tight sm:text-4xl for section headings",
            "Use text-4xl sm:text-6xl lg:text-7xl for hero headings",
            "Include font-display class for display fonts"
          ]
        },
        "body": {
          "description": "Body text styles",
          "rules": [
            "Use text-lg text-muted-foreground for main paragraphs",
            "Use text-sm text-muted-foreground for secondary text",
            "Add leading-8 for improved readability in paragraphs"
          ]
        }
      }
    },
    "formatting": {
      "tool": "Prettier",
      "config": ".prettierrc",
      "rules": [
        "Use single quotes",
        "Semicolons required",
        "2 spaces indentation",
        "100 characters line length",
        "Trailing commas in multiline",
        "Sort imports automatically",
        "Sort Tailwind classes"
      ]
    },
    "gitHooks": {
      "tool": "Husky",
      "hooks": {
        "pre-commit": "Run lint-staged"
      },
      "lintStaged": {
        "js/ts": ["prettier --write", "eslint --fix"],
        "other": ["prettier --write"]
      }
    },
    "bestPractices": [
      "Use shadcn/ui components from @/components/ui",
      "Follow the Gray style design system",
      "Use Tailwind classes for custom styling",
      "Implement dark mode using the 'dark' class",
      "Use Lucide icons from lucide-react",
      "Follow TypeScript best practices",
      "Use CSS variables for theming",
      "Format code with Prettier before committing",
      "Run ESLint before committing",
      "Install new shadcn/ui components using the CLI",
      "Include aria-hidden='true' for decorative elements",
      "Ensure proper heading hierarchy",
      "Provide alt text for all images",
      "Use next/image component for optimized images",
      "Implement mobile-first responsive design",
      "Use framer-motion for component animations"
    ],
    "fileStructure": {
      "components": "src/components",
      "pages": "src/app",
      "styles": "src/app/globals.css",
      "utils": "src/lib/utils",
      "hooks": "src/hooks"
    }
  },
  "aliases": {
    "@": "src",
    "@components": "src/components",
    "@ui": "src/components/ui",
    "@lib": "src/lib",
    "@hooks": "src/hooks"
  }
}
